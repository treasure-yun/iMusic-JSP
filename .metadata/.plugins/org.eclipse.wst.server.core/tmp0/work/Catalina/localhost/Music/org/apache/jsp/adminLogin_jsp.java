/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.85
 * Generated at: 2019-05-12 06:09:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class adminLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>后台管理系统</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function checkForm(form){\r\n");
      out.write("\tif(form.username.value==\"\"){\r\n");
      out.write("\t\talert(\"用户名不能为空！\");\r\n");
      out.write("\t\tform.username.focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\tif(form.password.value==\"\"){\r\n");
      out.write("\t\talert(\"密码不能为空！\");\r\n");
      out.write("\t\tform.password.focus();\r\n");
      out.write("\t\treturn false;\r\n");
      out.write("\t}\r\n");
      out.write("\treturn true;\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<table width=\"1250\" height=\"50\" border=\"0\" style=\"background:#404040\">\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td width=\"100\"></td>\r\n");
      out.write("      <td width=\"150\" align=\"center\">\r\n");
      out.write("         <img src=\"picture/icon.png\" height=\"50\"/></td>\r\n");
      out.write("      <td width=\"200\" align=\"center\">\r\n");
      out.write("         <font size=\"5\" color=\"white\"><b>后台管理系统</b></font>\r\n");
      out.write("      </td>\r\n");
      out.write("      <td width=\"800\"></td>\r\n");
      out.write("   </tr>\r\n");
      out.write("</table>\r\n");
      out.write("<hr width=\"400px\" size=\"6\" color=\"white\">\r\n");
      out.write("<h2 align=\"center\">管理员登录</h2>\r\n");
      out.write("<hr width=\"450px\" size=\"3\" color=\"red\">\r\n");
      out.write("<hr width=\"450px\" size=\"2\" color=\"white\">\r\n");
      out.write("<form name=\"form1\" method=\"post\" action=\"servlet/AdminLogin\" onsubmit=\"return checkForm(this);\">\r\n");
      out.write("   <table width=\"334\" border=\"0\" align=\"center\">\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td width=\"75\" align=\"center\">用&nbsp;户&nbsp;名:</td>\r\n");
      out.write("      <td width=\"259\" align=\"center\"><input type=\"text\" name=\"username\">*</td>\r\n");
      out.write("   </tr>\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td align=\"center\">密&nbsp;&nbsp;&nbsp;&nbsp;码:</td>\r\n");
      out.write("      <td align=\"center\"><input type=\"password\" name=\"password\"/>*</td>\r\n");
      out.write("   </tr>\r\n");
      out.write("   <tr height=\"10px\"></tr>\r\n");
      out.write("   <tr>\r\n");
      out.write("      <td colspan=\"2\" align=\"center\">\r\n");
      out.write("      <input type=\"submit\" name=\"submit\" value=\"登录\"/>\r\n");
      out.write("      &nbsp;&nbsp;&nbsp;&nbsp;\r\n");
      out.write("      <input type=\"reset\" name=\"reset\" value=\"重置\"/></td>\r\n");
      out.write("   </tr>\r\n");
      out.write("   </table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
